--[[
 /$$                                                           /$$            /$$$$$$                                                              /$$      /$$ /$$                    
| $$                                                          | $$           /$$__  $$                                                            | $$  /$ | $$|__/                    
| $$        /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$$ /$$$$$$        | $$  \ $$ /$$$$$$$   /$$$$$$$ /$$  /$$  /$$  /$$$$$$   /$$$$$$       | $$ /$$$| $$ /$$ /$$$$$$$   /$$$$$$$
| $$       /$$__  $$| $$__  $$ /$$__  $$ /$$__  $$ /$$_____/|_  $$_/        | $$$$$$$$| $$__  $$ /$$_____/| $$ | $$ | $$ /$$__  $$ /$$__  $$      | $$/$$ $$ $$| $$| $$__  $$ /$$_____/
| $$      | $$  \ $$| $$  \ $$| $$  \ $$| $$$$$$$$|  $$$$$$   | $$          | $$__  $$| $$  \ $$|  $$$$$$ | $$ | $$ | $$| $$$$$$$$| $$  \__/      | $$$$_  $$$$| $$| $$  \ $$|  $$$$$$ 
| $$      | $$  | $$| $$  | $$| $$  | $$| $$_____/ \____  $$  | $$ /$$      | $$  | $$| $$  | $$ \____  $$| $$ | $$ | $$| $$_____/| $$            | $$$/ \  $$$| $$| $$  | $$ \____  $$
| $$$$$$$$|  $$$$$$/| $$  | $$|  $$$$$$$|  $$$$$$$ /$$$$$$$/  |  $$$$/      | $$  | $$| $$  | $$ /$$$$$$$/|  $$$$$/$$$$/|  $$$$$$$| $$            | $$/   \  $$| $$| $$  | $$ /$$$$$$$/
|________/ \______/ |__/  |__/ \____  $$ \_______/|_______/    \___/        |__/  |__/|__/  |__/|_______/  \_____/\___/  \_______/|__/            |__/     \__/|__/|__/  |__/|_______/ 
                               /$$  \ $$                                                                                                                                               
                              |  $$$$$$/                                                                                                                                               
                               \______/                                                                                                                                                
 ]]--

return(function(tk,Fk,Ik,ak,Ek,Tk,yk,Ok,mk,bk,ok,ik,Nk,hk,Pk,Yk,wk,Dk,ek,Rp,lk,jk,Ck,dk,Bk,vk,nk,Wk,Hk,Kk,qk,Uk,Ap,zk,Zk,Jk,Sk,Gk,uk,fk,Lk,Xk,sk,A,...)local r,c,x=select,pcall,(tostring);local rp,T,O=0X0,nil,(nil);repeat if rp==0X0 then T=0X1;rp=1;else do O=Zk;end;do break;end;end;until(false);do rp=0;end;local k,M,X=nil,nil,(nil);do while rp~=0x3 do if not(rp<=0X00000)then if rp==0X1 then M=string.char;rp=2;else X={[0]=1};do rp=3;end;end;else do k=ek;end;rp=1;end;end;end;local U=(table.insert);local w=(rawget);local e=dk.gsub;rp=0;local Z,G,Q,m=nil,nil,nil,(nil);while 0.5409274830497318 do if rp<=0X1 then if rp~=0 then Q=Ck;rp=2;else Z=dk.rep;rp=3;end;else do if rp==2 then do m=wk.wrap;end;do break;end;else G=Uk;do rp=1;end;end;end;end;end;local C=(setmetatable);rp=1;local h=(nil);do while rp<2 do if rp==0X0 then h=coroutine.yield;rp=2;else do rp=0X0;end;end;end;end;local f=unpack or qk;rp=0X1;local N,J,p=nil,nil,(nil);do while rp<=0X2 do if not(rp<=0)then if rp==1 then do N=4294967296;end;rp=0X2;else J={1,0X006,3};do rp=0X00000;end;end;else do p=Ok;end;rp=3;end;end;end;local b=(G and G()or _ENV);rp=0x0000;local a=(nil);repeat if rp==0 then ado rp=0x1;end;else rp=0X2;end;until rp>1;local V=tonumber;rp=0x0001;local v,pk=nil,(nil);do repeat if rp==0X0 then pk={};rp=2;else v=mk;rp=0;end;until rp>=0X2;end;local q=rawset;local B=nil;a=e(k(a,0X005),"\046.",function(Iv)if Q(Iv,0x2)==72 then local Lt=0;repeat do if Lt==0 then B=V(k(Iv,1,1));Lt=1;else do return hk;end;end;end;until false;else local en,Qn=0,nil;repeat if en~=0X000 then if B then local Ww=nil;for Gq=0X0,0x0002 do if Gq<=0X0 then do Ww=Z(Qn,B);end;else if Gq==0x01 then do B=fk;end;else return Ww;end;end;end;else return Qn;end;do break;end;else Qn=M(V(Iv,16));en=1;end;until(false);end;end);local y=function()local Eq=nil;local Nq=(0X1);do repeat if not(Nq<=0)then do if Nq==1 then do Eq=Q(a,T,T);end;Nq=0;else return Eq;end;end;else T=T+1;Nq=2;end;until false;end;end;local l=N-0X01;rp=0X0000;local j,E,L,P,gk,s,F,W,D,S,R=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;do repeat if rp<=5 then if not(rp<=2)then if rp<=0X00003 then gk={};rp=10;else if rp~=4 then L=j-1;rp=0x04;else do P=function()local PR,gR,BR,eR=Q(a,T,T+0X3);T=T+4;return eR*16777216+BR*65536+gR*256+PR;end;end;rp=0X1;end;end;else if not(rp<=0)then do if rp==0X0001 then do local uF=(0);local PF=(nil);repeat do if uF~=0X0 then for CB=0X1,31 do local rB=0X0;while rB<=1 do do if rB~=0 then PF=PF*vk;rB=0X2;else do(X)[CB]=PF;end;rB=0X0001;end;end;end;end;uF=2;else PF=0X2;uF=0X1;end;end;until uF>1;end;do rp=0X3;end;else E=0x02^0X34;rp=5;end;end;else j=0X000080000000;rp=0x2;end;end;else if not(rp<=0x8)then if rp<=9 then F=function(WQ,XQ,iQ)local pQ=((WQ/X[XQ])%X[iQ]);pQ=pQ-pQ%Nk;return pQ;end;rp=8;else do if rp~=0xA then D=function()local MD=P();local sD,HD=Nk,(6);local yD,SD,ZD,tD=nil,nil,nil,nil;repeat do if HD<=0x2 then if not(HD<=0)then do if HD==1 then if ZD==0X0 then if tD==Gk then do return SD*0;end;else do ZD=1;end;sD=0;end;else if ZD~=0X00007Ff then else if tD==0 then return SD*(0/0);else return SD*(0X1/0);end;end;end;HD=4;else tD=F(yD,0x0,0x14)*N+MD;HD=0X1;end;end;else SD=(-Nk)^F(yD,31,1);HD=0x3;end;else if not(HD<=0x4)then if HD~=0X5 then do yD=P();end;do HD=0X005;end;else if not(MD==0 and yD==0x0000)then else return 0X00000;end;HD=0;end;else if HD==3 then do ZD=F(yD,20,0X0000B);end;do HD=0X2;end;else return SD*(0X2^(ZD-1023))*(tD/E+sD);end;end;end;end;until false;end;rp=6;else s={[0]={[Gk]=0x0000,0X1,2,3,0X04,5,6,0X7,0x8,0X9,0X000A,11,0X00c,0xd,0XE,0X0f},{[0]=1,0,0X03,0x2,bk,4,7,0X6,9,8,0Xb,0X000a,13,0XC,15,0Xe},{[0]=2,0X3,0,1,6,0x07,4,5,0x000A,Tk,0x0008,0X9,0xE,0X0f,0XC,0Xd},{[0x000]=ak,2,1,0,0X007,0X6,0X5,4,Tk,0X0A,0X9,0X08,0X0f,14,0XD,12},{[0]=4,5,Bk,7,0X0,0x1,0X2,ak,0X0000C,13,14,0X00f,0X8,yk,Pk,0X0000B},{[0]=0x5,jk,7,0x6,1,0x0,3,0X2,0Xd,12,15,14,0X9,8,11,0xa},{[0]=0X6,7,4,5,0X0002,3,0,0X00001,14,0X0000F,12,13,0X0000a,11,8,0X009},{[0]=0X07,0X6,0X5,0X0004,0X003,0X02,Nk,0,15,14,0XD,0xC,0X000b,10,0X9,0X0008},{[0X0]=8,9,0X0000a,11,0X00c,0xD,0X0000e,0X000F,0,0X1,0X02,3,0X4,5,6,7},{[0]=0X9,0X08,11,0XA,0xd,12,0XF,0xe,0X00001,0X0,3,0X2,5,0X4,0X7,0X006},{[0]=10,0X00b,Ek,0X9,lk,15,12,0Xd,0X2,0X0003,0x000,Nk,6,7,4,5},{[0]=0X00b,10,9,0x0008,0XF,14,0xd,12,0X3,0X2,0x1,0,7,0X6,5,0x4},{[0]=Lk,0XD,14,15,0X08,0x009,10,0Xb,0X04,0X5,0X6,0X00007,0,1,2,0X3},{[0]=13,12,Xk,0X000E,9,0X00008,Tk,0Xa,5,4,0x7,0X6,1,0x0,3,2},{[0]=0XE,0Xf,Lk,0xd,10,11,8,0x9,6,7,4,5,0x0002,0X3,0x0000,1},{[Gk]=15,0xe,Fk,12,11,Pk,yk,0X8,0X007,6,0X5,jk,0X3,2,0X1,0x00000}};rp=0X9;end;end;end;else if rp<=6 then do S=(Wk or bit32);end;rp=7;else if rp~=7 then W=function()local N9,A9=nil,(nil);for z3=0,2 do if z3<=0 then N9,A9=P(),P();else if z3~=1 then return A9*N+N9;elseif not(A9>=j)then else A9=A9-N;end;end;end;end;rp=11;else R=Dk;rp=0x000c;end;end;end;end;until rp>11;end;local z=S and S[nk]or function(Z2,O2)for lj=0X000,1 do if lj~=0 then O2=O2%N;else do Z2=Z2%N;end;end;end;local k2,V2=nil,nil;for dy=0,0X003 do do if not(dy<=1)then if dy==2 then while Z2>0 and O2>0 do local xW,PW,zW=Z2%16,0X1,(nil);while(true)do if not(PW<=0X00)then if PW==0X1 then zW=O2%16;PW=0X000;else Z2=(Z2-xW)/0x0010;do break;end;end;else k2=k2+s[xW][zW]*V2;do PW=0X2;end;end;end;PW=1;while PW~=0x2 do do if PW==0X0 then V2=V2*sk;do PW=2;end;else O2=(O2-zW)/0X10;do PW=0;end;end;end;end;end;else return k2+Z2*V2+O2*V2;end;else if dy==0 then k2=0;else V2=1;end;end;end;end;end;local Y=(S and S[Sk]or function(Z1,b1)local s1=(0);repeat if not(s1<=0X0)then if s1~=1 then return((Z1+b1)-z(Z1,b1))/vk;else b1=b1%N;do s1=0X002;end;end;else Z1=Z1%N;s1=1;end;until false;end);local u=(S and S.bor or function(Je,Te)do Je=Je%N;end;do Te=Te%N;end;return l-Y(l-Je,l-Te);end);local t=S and S[zk];local i=(S and S.lshift);local I=S and S.bnot or function(Cy)return l-(Cy%N);end;rp=0X7;local H,o,K,Ak,g,Rk,rk=nil,nil,nil,nil,nil,nil,nil;while rp<9 do if rp<=3 then if not(rp<=1)then if rp==0X02 then do t=t or function(ww,Sw)local yw,Gw=0X2,(nil);while yw<3 do if yw<=0x0 then do Gw=(ww%N/X[Sw]);end;do yw=0X03;end;else do if yw==1 then do if not(Sw<0x0)then else return i(ww,-Sw);end;end;yw=0X0;else if not(Sw>=32)then else return 0X0;end;yw=0X01;end;end;end;end;return Gw-Gw%0X1;end;end;do rp=3;end;else do H=function()local Tg,Qg=0x0000,0X0;while true do local b6=(Q(a,T,T));do T=T+1;end;Tg=u(Tg,i(Y(b6,127),Qg));if Y(b6,128)~=0X0 then else return Tg;end;do Qg=Qg+7;end;end;end;end;rp=0X4;end;else if rp~=0 then g=uk;do rp=0X008;end;else Ak=y();rp=1;end;end;else if rp<=5 then if rp~=0X0004 then rk=function(Uw)local aw,mw=nil,(nil);local Nw=0X000;while Nw~=2 do if Nw~=0 then do mw=z(aw[1],Rk);end;do Nw=0X2;end;else aw={Q(a,T,T+0X3)};Nw=1;end;end;local iw=(z(aw[2],Rk));local ew=z(aw[3],Rk);local Lw=(z(aw[4],Rk));Rk=(229*Rk+Uw)%256;T=T+4;return Lw*16777216+ew*0x10000+iw*Ik+mw;end;rp=9;else o={[0X7]=5,[0]=0x00002,[8]=8,[0X0]=5,[6]=2,[0X1]=5,[3]=0X04,[2]=0x7};rp=0x00006;end;else if rp<=6 then K=function()local Mn=(H());if Mn>L then return Mn-N;end;return Mn;end;rp=0X0;else if rp==7 then i=i or function(xx,dx)if not(dx>=Yk)then else return 0X0;end;if not(dx<Gk)then else return t(xx,-dx);end;return(xx*X[dx])%N;end;rp=2;else do Rk=y();end;rp=0x005;end;end;end;end;end;local ck=function(...)return r('#',...),{...};end;local xk=1;rp=0X7;local Vk,kk,Qk,Mk,d=nil,nil,nil,nil,(nil);repeat if rp<=3 then if not(rp<=0X1)then if rp~=0x2 then(pk)[0X2]=gk;rp=0;else return kk(b,Mk,fk)(...);end;else if rp==0x0 then do gk=fk;end;rp=2;else do d=Rp;end;do rp=3;end;end;end;else do if rp<=0X00005 then if rp==4 then do Mk=Qk();end;rp=0X1;else function Qk()local dY,AY,vY,IY,EY,SY,BY,cY,oY=nil,nil,nil,nil,nil,nil,nil,nil,nil;for yd=0,11 do do if yd<=0X005 then if not(yd<=2)then do if yd<=0x3 then do vY={nil,nil,fk,fk,fk,nil,{},{},{}};end;else if yd~=0X4 then do EY=vY[0X7];end;else IY=P()-0XB5bF;end;end;end;else if not(yd<=0X0)then if yd~=1 then AY=0X1;else dY={};end;else end;end;else do if not(yd<=0X00008)then if not(yd<=0X009)then if yd==0X00A then do for Dm=0X0,cY-1 do(SY)[Dm]=Qk();end;end;else oY={};end;else cY=P()-0X12C03;end;elseif yd<=0X006 then do SY=vY[9];end;else do if yd~=0X007 then BY={};else for Ah=1,IY do EY[Ah]={[7]=H(),[2]=y(),[0X006]=K(),[jk]=y(),[bk]=y(),[1]=K(),[ak]=K()};end;end;end;end;end;end;end;end;vY[0X0C]=P();vY[0X11]=y();local pY,xY=5,nil;while pY<0X6 do if not(pY<=0X2)then do if not(pY<=3)then if pY==4 then do(vY)[5]=H();end;pY=0;else xY=y();pY=1;end;else vY[0X0003]=F(xY,2,0X01)~=0;do pY=0X4;end;end;end;else if not(pY<=0)then if pY==0X1 then do(vY)[1]=F(xY,Nk,0X1)~=0x00;end;do pY=0X3;end;else do(vY)[0X0004]=H();end;pY=6;end;else vY[0x006]=H();pY=0X002;end;end;end;pY=0X00000;local KY,eY,jY=nil,nil,(nil);repeat if not(pY<=1)then if not(pY<=2)then if pY~=0X00003 then KY=P()-0x0005274;pY=0X0002;else for t7=Nk,KY do local B7=fk;local D7=(y());local a7=(nil);for Ia=0X0,4 do do if not(Ia<=1)then if not(Ia<=2)then do if Ia==3 then BY[AY]=a7;else do AY=AY+1;end;end;end;else a7={B7,{}};end;elseif Ia==0X00 then do(dY)[t7-1]=AY;end;else if D7==27 then do B7=k(Vk(eY),D()+P());end;elseif D7==0X75 then do B7=k(Vk(eY),0x0013);end;elseif D7==137 then do B7=tk;end;elseif D7==0X54 then do B7=D();end;elseif D7==0x2c then B7=P();elseif D7==48 then do B7=k(Vk(eY),P());end;elseif D7==33 then B7=W();elseif D7==82 then B7=Jk;elseif D7==ok then do B7=W();end;elseif D7==0X0 then B7=W();elseif D7==Hk then B7=W();elseif D7==163 then do B7=k(Vk(eY),ak);end;end;end;end;end;do if not(jY)then else local N1=(0x00000);do repeat if N1==0x0000 then gk[xk]=a7;N1=0X1;else do xk=xk+1;end;break;end;until false;end;end;end;end;pY=5;end;else eY=y();pY=1;end;else do if pY==0X0 then vY[lk]=P();pY=4;else do jY=y()~=0;end;pY=3;end;end;end;until pY>4;pY=1;repeat if pY<=0X0 then do(vY)[0X2]=oY;end;pY=2;else do if pY==0X001 then for D5=1,IY do local b5=nil;do for pQ=0X0,0X1 do do if pQ==0X0 then b5=vY[Kk][D5];else do for BN,RN in Ap(J)do local QN=o[RN];local jN=(b5[QN]);if jN==0X1 then local K0,P0=nil,nil;for It=0X0,0X0002 do if It<=0X0 then do K0=dY[b5[RN]];end;else if It==1 then P0=BY[K0];else if not(P0)then else local hY=(nil);local nY=(0X0001);repeat if nY~=0 then do(b5)[QN]=P0[0X1];end;nY=0X00;else do hY=P0[2];end;do nY=0X2;end;end;until nY>=0X2;(hY)[#hY+1]={b5,QN};end;end;end;end;else if jN==0Xc then b5[RN]=D5+b5[RN]+Nk;end;end;end;end;end;end;end;end;end;do pY=0;end;else do for L0=0x1,H()do oY[L0]={y(),H()};end;end;pY=0X3;end;end;end;until pY==3;do return vY;end;end;rp=4;end;else if rp<=0X6 then rp=0X8;else if rp~=0X00007 then function kk(xd,ld,Vd)local kd=(ld[9]);local Nd=ld[0X7];local Xd,Rd,Ud,zd,Od,Td=ld[0x006],ld[5],ld[0x08],ld[1],ld[0X0003],(ld[0X0004]);local ad=(C({},{__mode="v"}));local Ed=(nil);do Ed=function(...)local Li={};local Ji=0X1;local Yi=0X0;local Pi=({[2]=ld,[1]=Li});local ni=(G and G()or _ENV);local gi=((ni==b and xd or ni));local ei,Oi=ck(...);ei=ei-0X1;do for LK=0,ei do do if not(Xd>LK)then break;else(Li)[LK]=Oi[LK+1];end;end;end;end;if not zd then Oi=nil;else if not(Od)then else Li[Xd]={n=ei>=Xd and ei-Xd+0X1 or 0,f(Oi,Xd+0X001,ei+1)};end;end;if gi~=ni then if not(v)then do _ENV=gi;end;else(v)(Ed,gi);end;end;do repeat local P1=Nd[Ji];local s1=(P1[7]);Ji=Ji+1;if s1>=47 then do if not(s1>=0x0046)then if s1<0x3A then if not(s1<0X34)then do if not(s1>=55)then if not(s1<0X35)then if s1==0X36 then local E1=P1[6];(Li)[E1]=Li[E1](Li[E1+1]);Yi=E1;else local WF=(P1[6]);local CF=m(function(...)(h)();for MH,ZH,FH,OH,yH,qH,LH,BH,oH,vH in...do(h)(true,{MH,ZH,FH,OH,yH,qH,LH,BH,oH,vH});end;end);(CF)(Li[WF],Li[WF+0X1],Li[WF+0x2]);Yi=WF;do(Li)[WF]=CF;end;do Ji=P1[0X001];end;end;else do if P1[0X3]==0X88 then Ji=Ji-0X1;Nd[Ji]={[6]=(P1[0X0006]-107),[0X00001]=(P1[0X001]-107),[0x0007]=0X26};else repeat local jX,LX,JX=ad,Li,(P1[0X06]);if#jX>0 then local dT=({});for Ad,yd in O,jX do for JW,BW in O,yd do if not(BW[1]==LX and BW[0X2]>=JX)then else local Jd=(BW[2]);do if not(not dT[Jd])then else dT[Jd]={LX[Jd]};end;end;(BW)[0x1]=dT[Jd];(BW)[0X2]=1;end;end;end;end;until true;end;end;end;else if not(s1>=0X38)then local lS,hS=ei-Xd,P1[6];if not(lS<0X00)then else lS=-0X001;end;do for wI=hS,hS+lS do do Li[wI]=Oi[Xd+(wI-hS)+1];end;end;end;Yi=hS+lS;else do if s1~=0X000039 then do if not(Li[P1[1]]<=P1[0X004])then Ji=P1[0X6];end;end;else local QK=(P1[6]);local DK,JK,EK=Li[QK]();do if DK then Li[QK+0X1]=JK;do(Li)[QK+2]=EK;end;do Ji=P1[1];end;end;end;end;end;end;end;end;else if not(s1<0X31)then if s1<0x000032 then local UJ=(P1[6]);Yi=UJ+P1[1]-0x01;Li[UJ]=Li[UJ](f(Li,UJ+0X00001,Yi));do Yi=UJ;end;else if s1==51 then Li[P1[0X6]]=Li[P1[0X1]]*Li[P1[3]];else(Li)[P1[0X6]]=pk[P1[1]];end;end;else if s1~=0X30 then local hC=P1[6];(Li)[hC]=Li[hC](f(Li,hC+0x1,Yi));do Yi=hC;end;else(Li)[P1[6]]=Li[P1[1]]%P1[0X004];end;end;end;else do if not(s1>=64)then if s1>=61 then if not(s1<62)then if s1~=63 then Li[P1[6]]=Li[P1[1]]<Li[P1[3]];else(Li)[P1[0X00006]]=Li[P1[1]]+Li[P1[0X3]];end;else local Ks=P1[0X6];local Ps,es=Li[Ks]();if not(Ps)then else Ji=P1[1];do Li[Ks+3]=es;end;end;end;else if not(s1>=0X3B)then local Yn=(P1[0X00001]);(Li)[P1[0x6]]=Li[Yn]..Li[Yn+1];else if s1==0X3C then Li[P1[0x6]]=false;else do(Li)[P1[6]]=#Li[P1[0X001]];end;end;end;end;else if not(s1<0X00043)then if s1>=68 then if s1==69 then do Li[P1[6]]=Li[P1[0X001]]~=Li[P1[0X3]];end;else local Gb=P1[6];local eb,Kb=Li[Gb]();do if not(eb)then else Li[Gb+0X01]=Kb;Ji=P1[1];end;end;end;else(Li)[P1[6]]={f({},0x0001,P1[0X01])};end;else if s1>=65 then do if s1~=0X42 then(Li)[P1[6]]=P1[0X0005];else do(Li)[P1[6]]=gi[P1[5]];end;end;end;else if P1[0X3]==0X03b then Ji=Ji-0X1;do(Nd)[Ji]={[0X7]=38,[0X0006]=(P1[0x00006]-65),[1]=(P1[0x00001]-0X41)};end;elseif P1[0X003]~=0x000052 then repeat local A0,U0=ad,Li;if not(#A0>0)then else local VK={};for B_,r_ in O,A0 do for fM,zM in O,r_ do do if not(zM[0X0001]==U0 and zM[2]>=0)then else local TV=(zM[2]);do if not(not VK[TV])then else do VK[TV]={U0[TV]};end;end;end;zM[0X0001]=VK[TV];do zM[2]=1;end;end;end;end;end;end;until true;local Ia=(P1[0X006]);do return f(Li,Ia,Ia+P1[0x00001]-2);end;else Ji=Ji-1;(Nd)[Ji]={[0X1]=(P1[1]-0X091),[0x6]=(P1[0X00006]-145),[7]=0X5};end;end;end;end;end;end;else if s1<82 then if not(s1<76)then if not(s1>=79)then do if not(s1>=77)then do(Li)[P1[6]]=Li[P1[1]]^Li[P1[0X3]];end;else if s1==78 then(pk)[P1[1]]=Li[P1[0x00006]];else(Li)[P1[6]]=true;end;end;end;else if s1>=0x50 then if s1==0X51 then(Li)[P1[0X6]]=P1[5];else if not(Li[P1[1]]<=Li[P1[0x00003]])then else Ji=P1[0X6];end;end;else local hD=P1[0X00006];local cD=((P1[3]-1)*50);local pD=(Li[hD]);do for Js=1,Yi-hD do(pD)[cD+Js]=Li[hD+Js];end;end;end;end;else if s1>=73 then if not(s1>=0X4a)then local lN=(P1[0X6]);local aN,XN=Li[lN]();do if not(aN)then else do for M0=0X00001,P1[0X3]do do Li[lN+M0]=XN[M0];end;end;end;Ji=P1[0x1];end;end;else if s1~=75 then Li[P1[6]]=Pi[P1[0x1]];else local zB=P1[0X0001];local MB=P1[6];if zB~=0 then Yi=MB+zB-1;end;local qB,RB=nil,(nil);local aB=P1[3];do if zB~=1 then qB,RB=ck(Li[MB](f(Li,MB+0X00001,Yi)));else do qB,RB=ck(Li[MB]());end;end;end;do if aB~=1 then if aB~=0X0 then qB=MB+aB-2;Yi=qB+0x001;else do qB=qB+MB-0X01;end;Yi=qB;end;local cY=(0x0);for NI=MB,qB do cY=cY+1;(Li)[NI]=RB[cY];end;else Yi=MB-0X1;end;end;end;end;else if s1<71 then for Tr=P1[6],P1[1]do Li[Tr]=nil;end;else do if s1~=0X48 then Li[P1[0X06]][Li[P1[0X1]]]=P1[4];else(Li)[P1[6]]=Li[P1[0x0001]]==Li[P1[0X3]];end;end;end;end;end;else do if not(s1<0x000058)then do if s1>=91 then if s1<0X5C then do if Li[P1[1]]~=Li[P1[3]]then else Ji=P1[6];end;end;else if s1==93 then local aA=P1[0X6];local cA=(m(function(...)h();for kW in...do(h)(true,kW);end;end));cA(Li[aA],Li[aA+1],Li[aA+0X2]);do Yi=aA;end;(Li)[aA]=cA;Ji=P1[0X001];else repeat local S5,t5=ad,(Li);if not(#S5>0x0)then else local Jv=({});for bK,SK in O,S5 do for sj,xj in O,SK do do if xj[0X1]==t5 and xj[2]>=0 then local eU=xj[2];if not(not Jv[eU])then else do Jv[eU]={t5[eU]};end;end;do(xj)[0X1]=Jv[eU];end;xj[2]=0x1;end;end;end;end;end;until true;return Li[P1[6]]();end;end;else do if s1>=89 then if s1~=0X5A then if P1[0X3]==0X0007D then Ji=Ji-0X1;(Nd)[Ji]={[0X6]=(P1[0X006]-79),[7]=0x00014,[0X1]=(P1[0X1]-79)};else repeat local Pb,eb=ad,Li;if#Pb>0X0 then local ZL=({});for bG,qG in O,Pb do for M5,C5 in O,qG do do if C5[0X0001]==eb and C5[2]>=0 then local D5=C5[0X2];if not(not ZL[D5])then else(ZL)[D5]={eb[D5]};end;C5[1]=ZL[D5];C5[2]=1;end;end;end;end;end;until true;return;end;else local rH=P1[1];local jH=Li[rH];do for DN=rH+0X1,P1[3]do jH=jH..Li[DN];end;end;(Li)[P1[0X6]]=jH;end;else local pw=(P1[0X06]);local Dw=P1[1];Yi=pw+Dw-0X00001;do repeat local fN,MN=ad,Li;if not(#fN>0)then else local Kr=({});for sX,cX in O,fN do do for JK,EK in O,cX do if EK[0X1]==MN and EK[2]>=0x00 then local xw=(EK[2]);if not Kr[xw]then Kr[xw]={MN[xw]};end;(EK)[1]=Kr[xw];do(EK)[0X002]=1;end;end;end;end;end;end;until true;end;return Li[pw](f(Li,pw+0X1,Yi));end;end;end;end;else do if s1<0x55 then do if s1>=0X53 then if s1==0X000054 then Li[P1[6]]=Li[P1[1]]>Li[P1[0X003]];else do(Li)[P1[0X6]]=_ENV;end;end;else local Jv=(P1[0X6]);(Li[Jv])(Li[Jv+1]);Yi=Jv-0x001;end;end;else if not(s1>=86)then local h5=(P1[0X06]);local n5=m(function(...)(h)();do for bi,ri in...do h(true,bi,ri);end;end;end);(n5)(Li[h5],Li[h5+1],Li[h5+2]);Yi=h5;(Li)[h5]=n5;do Ji=P1[1];end;else do if s1~=0X000057 then Li[P1[6]]=Li[P1[0x1]]/Li[P1[0x00003]];else(Li[P1[0X0006]])[P1[0X005]]=Li[P1[0X3]];end;end;end;end;end;end;end;end;end;end;else if s1>=23 then if s1<0X23 then if not(s1<29)then if s1>=32 then if s1<0X0021 then local i4=(P1[6]);(Li[i4])(Li[i4+0X0001],Li[i4+2]);Yi=i4-1;else if s1~=34 then(Li)[P1[0X6]]={};else(Li)[P1[6]]=Li[P1[0X01]][Li[P1[3]]];end;end;else if s1>=0x001e then if s1==31 then Li[P1[0X006]]=u(Li[P1[0x1]],Li[P1[3]]);else if not(not Li[P1[0X6]])then else Ji=P1[1];end;end;else Li[P1[6]]=Li[P1[1]]-Li[P1[0X03]];end;end;else if s1>=0X1A then if s1<0X001B then Li[P1[6]]=Li[P1[1]]%Li[P1[0x3]];else if s1~=0x00001c then Li[P1[6]]=z(Li[P1[0X1]],Li[P1[0X3]]);else local Dy=Li[P1[0X00001]]/Li[P1[3]];do Li[P1[0X006]]=Dy-Dy%1;end;end;end;else if not(s1>=24)then Li[P1[6]]=Y(Li[P1[1]],Li[P1[3]]);else if s1==0X19 then do Li[P1[6]]=Li[P1[1]]<=Li[P1[3]];end;else local ZF=(Vd[P1[1]]);do(Li)[P1[6]]=ZF[1][ZF[0X2]];end;end;end;end;end;else if not(s1<0X29)then if not(s1>=44)then if s1<42 then local Ac=(P1[0X6]);do for eL=Ac,Ac+(P1[1]-0X1)do(Li)[eL]=Oi[Xd+(eL-Ac)+0X001];end;end;else if s1==0X0002B then local Tw=(kd[P1[1]]);local tw,Sw=Tw[2],(nil);local Hw=#tw;if not(Hw>0)then else Sw={};for S8=0X1,Hw do local i8=tw[S8];if i8[0X1]~=0X0 then do(Sw)[S8-0X1]=Vd[i8[2]];end;else(Sw)[S8-0X1]={Li,i8[0X002]};end;end;U(ad,Sw);end;Li[P1[6]]=kk(gi,Tw,Sw);else local Nm=P1[6];Li[Nm]=Li[Nm](Li[Nm+0X1],Li[Nm+2]);Yi=Nm;end;end;else if s1<45 then if P1[0X03]~=0x0000a7 then Li[P1[0x6]]=nil;else do Ji=Ji-1;end;(Nd)[Ji]={[7]=0X03B,[0X006]=(P1[6]-0x0071),[1]=(P1[1]-113)};end;else if s1==0x2E then do(gi)[P1[5]]=Li[P1[6]];end;else local RT=Vd[P1[1]];RT[1][RT[2]]=Li[P1[0X6]];end;end;end;else if s1>=38 then do if s1>=0X27 then if s1~=0x28 then if Li[P1[0x1]]==Li[P1[3]]then else Ji=P1[6];end;else local vu=P1[0x0006];Yi=vu+P1[0X1]-1;Li[vu](f(Li,vu+0X001,Yi));do Yi=vu-0X0001;end;end;else Li[P1[6]]=Li[P1[0X1]];end;end;else if not(s1>=36)then if not(not(Li[P1[1]]<Li[P1[0X3]]))then else do Ji=P1[6];end;end;else if s1~=0x25 then if Li[P1[0X0006]]then do Ji=P1[1];end;end;else if Li[P1[1]]~=P1[4]then Ji=P1[6];end;end;end;end;end;end;else if not(s1<11)then do if not(s1>=17)then do if not(s1<0X0E)then if s1>=15 then if s1==0X10 then do Pi[P1[0X0001]]=Li[P1[0X006]];end;else Li[P1[6]]=Li[P1[1]][P1[0X4]];end;else do(Li)[P1[0X6]]=I(Li[P1[1]]);end;end;else do if s1<12 then do(Li[P1[0X0006]])[Li[P1[1]]]=Li[P1[0X3]];end;else if s1==13 then(Li)[P1[6]]=Li[P1[0X1]]~=P1[4];else Li[P1[6]]=Li[P1[1]]>=Li[P1[0X3]];end;end;end;end;end;else if s1>=20 then if not(s1<0X15)then if s1==22 then if not(Li[P1[0X1]]<Li[P1[3]])then else Ji=P1[0X6];end;else Yi=P1[0x0006];do Li[Yi]=Li[Yi]();end;end;else do repeat local DR,fR=ad,(Li);do if not(#DR>0x00)then else local MO={};for qy,ly in O,DR do do for PM,lM in O,ly do if not(lM[1]==fR and lM[0X2]>=0x0000)then else local wx=(lM[2]);if not MO[wx]then(MO)[wx]={fR[wx]};end;lM[1]=MO[wx];lM[0X2]=1;end;end;end;end;end;end;until true;end;return Li[P1[0X6]];end;else if s1>=0X12 then if s1~=19 then do if Li[P1[0X1]]==P1[4]then Ji=P1[0X6];end;end;else repeat local qL,AL=ad,Li;do if not(#qL>0x0000)then else local kO={};for cO,BO in O,qL do for sO,VO in O,BO do if not(VO[1]==AL and VO[2]>=0)then else local ZA=VO[2];do if not(not kO[ZA])then else do(kO)[ZA]={AL[ZA]};end;end;end;do(VO)[1]=kO[ZA];end;(VO)[2]=1;end;end;end;end;end;until true;local yN=(P1[0X6]);return Li[yN](f(Li,yN+1,Yi));end;else local Ls=(Li[P1[1]]);local us=P1[6];Li[us+0x0001]=Ls;(Li)[us]=Ls[P1[4]];end;end;end;end;else if s1>=5 then do if s1<0X8 then if s1<0x6 then if P1[0X3]==0X000cE then do Ji=Ji-1;end;Nd[Ji]={[6]=(P1[0X6]-233),[7]=44,[0X1]=(P1[0X01]-233)};elseif P1[3]==0X000b then Ji=Ji-1;Nd[Ji]={[0X7]=0X037,[0x1]=(P1[0X1]-245),[0X6]=(P1[0X6]-0X0000f5)};else do repeat local q4,L4=ad,Li;if#q4>0 then local QY={};for xS,QS in O,q4 do for NE,PE in O,QS do if not(PE[1]==L4 and PE[0X00002]>=0)then else local b5=(PE[2]);do if not QY[b5]then QY[b5]={L4[b5]};end;end;PE[1]=QY[b5];PE[0X2]=0X1;end;end;end;end;until true;end;return f(Li,P1[0X6],Yi);end;else if s1~=7 then local rB=P1[0X6];local cB=Li[rB];local RB,FB=Li[rB+0X01],(Li[rB+0x00002]);(Li)[rB]=m(function()for Zv=cB,RB,FB do(h)(true,Zv);end;end);Ji=P1[0x1];else if P1[3]~=201 then Li[P1[6]]=not Li[P1[1]];else Ji=Ji-0X001;Nd[Ji]={[0X1]=(P1[1]-0X16),[0X7]=0X00002C,[6]=(P1[6]-22)};end;end;end;else if not(s1<0X9)then if s1~=0x0A then Yi=P1[6];Li[Yi]();Yi=Yi-1;else Li[P1[6]]=t(Li[P1[1]],Li[P1[3]]);end;else do(Li)[P1[0x6]]=i(Li[P1[0X1]],Li[P1[0x3]]);end;end;end;end;else do if not(s1>=2)then if s1==0X1 then Li[P1[0X00006]]=-Li[P1[1]];else do Ji=P1[0X0001];end;end;else if s1>=3 then if s1==4 then(Li[P1[0x6]])[P1[5]]=P1[0X4];else local Iz=P1[6];Li[Iz](f(Li,Iz+1,Yi));Yi=Iz-1;end;else local ur=(P1[0X6]);local Pr,xr=Li[ur],(P1[3]-0x001)*50;for zj=0x1,P1[0X1]do(Pr)[xr+zj]=Li[ur+zj];end;end;end;end;end;end;end;end;until false;end;end;end;if v then(v)(Ed,xd);end;do return Ed;end;end;rp=0X05;else Vk=function(eW)local DW=P();local MW,dW="",0X1;while-0X4DF354c2 do if not(dW<=0)then if dW~=1 then return MW;else for DH=0X1,DW,0X1f3d do local WH,jH=nil,(nil);for hV=0,2 do if hV<=0X0 then do WH=DH+ik-0x01;end;else if hV==0X1 then if WH>DW then WH=DW;end;else jH={Q(a,T+DH-0X1,T+WH-1)};end;end;end;do for mf=1,#jH do local gf=(0);while gf~=0x002 do if gf~=0 then Ak=(eW*Ak+249)%256;do gf=2;end;else jH[mf]=z(jH[mf],Ak);do gf=0X1;end;end;end;end;end;MW=MW..M(f(jH));end;dW=0;end;else T=T+DW;dW=0X2;end;end;end;do rp=0X06;end;end;end;end;end;end;until(false);end)(false,13,0X00100,0X3,0X00008,0Xb,0x9,error,setfenv,0x05,166,0X1F3d,1,"",0XA,32,coroutine,assert,string.sub,string.match,0x0000e,0x4,string.byte,string,0X06,0X00002,'b\120\111r',bit,74,0X7,table.unpack,getfenv,ipairs,"rs\104\105ft",next,true,'b\097\110\100',0X0,type,nil,0X0000c,15,16,{0x0A766,785382718,0X0b8174d19,1240557747,0x7cb7a022,0XD872194b,1771971565,2484594337,0X7688e6c9},...);
